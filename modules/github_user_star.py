# 获取用户所有star仓库全名

import requests

def get_github_headers(access_token):
    """构造GitHub API所需的请求头。"""
    return {
        "Authorization": f"token {access_token}",
        "Accept": "application/vnd.github.v3+json"
    }

def get_starred_repositories(username, access_token):
    """获取用户所有starred的GitHub仓库信息。"""
    url = f"https://api.github.com/users/{username}/starred"
    headers = get_github_headers(access_token)
    starred_repositories = []
    
    while url:
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            starred_repositories.extend(response.json())

            # GitHub API在响应的头部信息中包含下一页的链接
            url = response.links.get('next', {}).get('url')
        else:
            # 错误处理，打印错误信息并终止循环
            response.raise_for_status()
            break

    return starred_repositories

def get_user_star_main(username, access_token):

    try:
        # 获取starred仓库列表
        starred_repos = get_starred_repositories(username, access_token)

        # 打印星标仓库数量
        print(f"Star数量: {len(starred_repos)}")

        # 打印所有星标仓库的全名
        # print("Star仓库全名:")
        fullnames_list = [repo['full_name'] for repo in starred_repos]
        return fullnames_list
    except requests.exceptions.RequestException as e:
        print(f"发生错误: {e}")
        return

if __name__ == "__main__":
    # 输入GitHub用户名和访问令牌
    username = input("请输入GitHub用户名：")
    access_token = input("请输入GitHub访问令牌：")
    get_user_star_main(username, access_token)


